version: '3.8'
services:
  app:
    image: app
    container_name: app
    build:
      context: client
      dockerfile: Dockerfile
      target: runner
    environment:
      - SERVER_SIDE_API=http://api_01:9000/graphql
      - CLIENT_SIDE_API=https://dienkhoiland.vn/graphql

    ports:
      - 3000:3000

    networks:
      - shared-network

  api_01:
    image: api_01
    container_name: api_01
    build: 
      context: server
      dockerfile: Dockerfile
      target: production
    environment:
      - JWT_SECRET=dienkhoilandserct
      - REFRESH_TOKEN_SECRET=dienkhoirfsecrt
      - ROLES_KEY=dienkhoiapproles
      - ATLAS_URL=mongodb+srv://dkland:dkland2022@dkland.89go6.mongodb.net/?retryWrites=true&w=majority
      - REDIS_HOST=redis

    ports:
      - 9000:9000

    networks:
      - shared-network

  api_02:
    image: api_02
    container_name: api_02
    build: 
      context: server
      dockerfile: Dockerfile
      target: production
    environment:
      - JWT_SECRET=dienkhoilandserct
      - REFRESH_TOKEN_SECRET=dienkhoirfsecrt
      - ROLES_KEY=dienkhoiapproles
      - ATLAS_URL=mongodb+srv://dkland:dkland2022@dkland.89go6.mongodb.net/?retryWrites=true&w=majority
      - REDIS_HOST=redis

    ports:
      - 9001:9001

    networks:
      - shared-network

  manager: 
    image: manager
    container_name: manager
    build:
      context: admin
      dockerfile: Dockerfile

    ports:
      - 3001:3001

    networks:
      - shared-network
  
  nginx: 
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    
    command: /bin/sh -c "nginx -g 'daemon off;'"

    depends_on:
      app:
        condition: service_started
      api_01:
        condition: service_started

      api_02:
        condition: service_started

    networks:
      - shared-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - shared-network
    ports:
      - 6379:6379

networks:
  shared-network:
    driver: bridge

volumes:
  redis-data:
    driver: local